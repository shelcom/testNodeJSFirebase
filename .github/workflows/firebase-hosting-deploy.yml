name: Deploy to Firebase Hosting on push

on:
  push:
    branches:
      - main # This runs on every push to the "main" branch. Modify the branch name if needed.

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      PORT: ${{ secrets.PORT }}
      DB_USER: ${{ secrets.DATABASE_USER }}
      DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DB_NAME: ${{ secrets.DATABASE_NAME }}
      DB_HOST: ${{ secrets.DATABASE_HOST }}
      DB_PORT: ${{ secrets.DATABASE_PORT }}
      DB_SSL: ${{ secrets.DB_SSL }}
      PGADMIN_EMAIL: ${{ secrets.PGADMIN_EMAIL }}
      PGADMIN_PASSWORD: ${{ secrets.PGADMIN_PASSWORD }}

      JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      JWT_FORGET_PASSWORD_SECRET: ${{ secrets.JWT_FORGET_PASSWORD_SECRET }}

      # Minio
      MINIO_END_POINT: ${{ secrets.MINIO_END_POINT }}
      MINIO_PORT: ${{ secrets.MINIO_PORT }}
      MINIO_IS_USE_SSL: ${{ secrets.MINIO_IS_USE_SSL }}
      MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      BUCKET_REGION: ${{ secrets.BUCKET_REGION }}

      MAIL_LOGIN: ${{ secrets.MAIL_LOGIN }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

      SALT_VALUE: ${{ secrets.SALT_VALUE }}
      REDIS_URL: ${{ secrets.REDIS_URL }}

      APP_ID_ONESIGNAL: ${{ secrets.APP_ID_ONESIGNAL }}
      API_KEY_ONESIGNAL: ${{ secrets.API_KEY_ONESIGNAL }}

      RP_NAME: ${{ secrets.RP_NAME }}
      RP_ID: ${{ secrets.RP_ID }}
      ORIGIN: ${{ secrets.ORIGIN }}
      THROTTLE_TTL: ${{ secrets.THROTTLE_TTL }}
      THROTTLE_LIMIT: ${{ secrets.THROTTLE_LIMIT }}

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Install dependencies step
      - name: Install dependencies
        run: npm ci && npm install copyfiles --save-dev

      # Build step
      - name: build
        run: npm run build
